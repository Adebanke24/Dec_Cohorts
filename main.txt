#Configured aws provider with proper credentials
provider "aws" {
  region     = "us-east-2"
  profile = "datakey"
}


#resource "aws_instance" "first_instance" {
  #ami           = "ami-0c80e2b6ccb9ad6d1" 
  #instance_type = "t2.micro"

#tags = {

    #Name = "web server"
#}
#}


# Project - Create an Instance and deploy inside a VPC


# Create a VPC
resource "aws_vpc" "prodvpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "Production_vpc"
  }
}


# Create a subnet

resource "aws_subnet" "prodsubnet1" {
  vpc_id     = aws_vpc.prodvpc.id
  cidr_block = "10.0.1.0/24"
availability_zone =   "us-east-2a"
map_public_ip_on_launch = true


  tags = {
    Name = "Production_subnet"
  }
}


# Create an Internet Gateway

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.prodvpc.id

  tags = {
    Name = "New-IGW"
  }
}

# Create a Route Table

resource "aws_route_table" "prodroute" {
  vpc_id = aws_vpc.prodvpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  tags = {
    Name = "RT"
  }
}
# Associate subnet with a Route Table

resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.prodsubnet1.id
  route_table_id = aws_route_table.prodroute.id
}

# Create Security Group

resource "aws_security_group" "allow_web" {
  name        = "allow_web"
  description = "Allow webserver inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.prodvpc.id

  tags = {
    Name = "allow_web"
  }
}

resource "aws_vpc_security_group_ingress_rule" "allow_webtraffic" {
  security_group_id = aws_security_group.allow_web.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 443
  ip_protocol       = "tcp"
  to_port           = 443
}

resource "aws_vpc_security_group_ingress_rule" "allow_HTTP" {
  security_group_id = aws_security_group.allow_web.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 80
  ip_protocol       = "tcp"
  to_port           = 80
}

resource "aws_vpc_security_group_ingress_rule" "allow_SSH" {
  security_group_id = aws_security_group.allow_web.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 22
  ip_protocol       = "tcp"
  to_port           = 22
}

  resource "aws_security_group" "example" {
  # ... other configuration ...

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
}



# Create an Instance and add security group to the Instance

resource "aws_instance" "first_instance" {
  ami           = "ami-0c80e2b6ccb9ad6d1" 
  instance_type = "t2.micro"
  vpc_security_group_ids    = [aws_security_group.allow_web.id]
  subnet_id      = aws_subnet.prodsubnet1.id
  key_name   = "OhioKP"
  availability_zone =  "us-east-2a"
  count =

tags = {
    Name = "web server"
}
}
